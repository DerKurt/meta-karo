From fc9ced9cad493c8d1e95d9ae40d6fa46a330a4eb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Lothar=20Wa=C3=9Fmann?= <LW@KARO-electronics.de>
Date: Tue, 21 Apr 2020 12:10:15 +0200
Subject: [PATCH] usb: dwc2: prevent BUG() due to uninitialized timer
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The dwc2_handle_common_intr() handler is installed before the dwc2
core has been properly initialized. If the DWC2 driver is set up for
device only operation, this may lead to a spurious interrupt that may
enter the HCD code path in dwc2_handle_wakeup_detected_intr() which
performs a mod_timer() on the then uninitialized hsotg->wkp_timer
leading to the following crash:
------------[ cut here ]------------
kernel BUG at kernel/time/timer.c:957!
Internal error: Oops - BUG: 0 [#1] PREEMPT SMP ARM
Modules linked in:
CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.7.0-rc2-dirty #1
Hardware name: STM32 (Device Tree Support)
PC is at mod_timer+0x1e8/0x2d0
LR is at dwc2_handle_common_intr+0x734/0x968
pc : [<c0185a28>]    lr : [<c05cc93c>]    psr: 60000093
sp : d705dd80  ip : 000005b0  fp : 00000000
r10: 00000000  r9 : 00000000  r8 : d651816c
r7 : 80000000  r6 : 00000000  r5 : 00000001  r4 : d6518040
r3 : 00000000  r2 : 00000000  r1 : ffff8ca7  r0 : d651819c
Flags: nZCv  IRQs off  FIQs on  Mode SVC_32  ISA ARM  Segment none
Control: 10c5387d  Table: c000406a  DAC: 00000051
Process swapper/0 (pid: 1, stack limit = 0x(ptrval))
Stack: (0xd705dd80 to 0xd705e000)

Move the call to devm_request_irq() after dwc2_force_dr_mode() which
prevents the hcd code path from being taken in device only mode and
after dwc2_hcd_init() which initializes the wkp_timer struct that may
be used in the interrupt handler.

Signed-off-by: Lothar Wa√ümann <LW@KARO-electronics.de>
---
 drivers/usb/dwc2/platform.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/usb/dwc2/platform.c b/drivers/usb/dwc2/platform.c
index 69972750e161..abaaad05f795 100644
--- a/drivers/usb/dwc2/platform.c
+++ b/drivers/usb/dwc2/platform.c
@@ -414,14 +414,6 @@ static int dwc2_driver_probe(struct platform_device *dev)
 	if (hsotg->irq < 0)
 		return hsotg->irq;
 
-	dev_dbg(hsotg->dev, "registering common handler for irq%d\n",
-		hsotg->irq);
-	retval = devm_request_irq(hsotg->dev, hsotg->irq,
-				  dwc2_handle_common_intr, IRQF_SHARED,
-				  dev_name(hsotg->dev), hsotg);
-	if (retval)
-		return retval;
-
 	hsotg->vbus_supply = devm_regulator_get_optional(hsotg->dev, "vbus");
 	if (IS_ERR(hsotg->vbus_supply)) {
 		retval = PTR_ERR(hsotg->vbus_supply);
@@ -527,6 +519,14 @@ static int dwc2_driver_probe(struct platform_device *dev)
 		hsotg->hcd_enabled = 1;
 	}
 
+	dev_dbg(hsotg->dev, "registering common handler for irq%d\n",
+		hsotg->irq);
+	retval = devm_request_irq(hsotg->dev, hsotg->irq,
+				  dwc2_handle_common_intr, IRQF_SHARED,
+				  dev_name(hsotg->dev), hsotg);
+	if (retval)
+		goto error_init;
+
 	platform_set_drvdata(dev, hsotg);
 	hsotg->hibernated = 0;
 
-- 
2.11.0

